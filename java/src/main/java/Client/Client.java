package Client;

/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */

/**
 *
 * @author cody6
 */




import com.google.api.core.ApiFuture;
import com.google.cloud.firestore.DocumentSnapshot;
import com.google.cloud.firestore.QueryDocumentSnapshot;
import com.google.cloud.firestore.QuerySnapshot;
import com.plaid.Accounts;
import static com.plaid.InitializeFirestore.db;
import com.plaid.Transactions;
import com.plaid.client.model.AccountBalance;
import com.plaid.client.model.AccountBase;
import com.plaid.client.model.AccountSubtype;
import com.plaid.client.model.Transaction;
import com.plaid.quickstart.QuickstartApplication;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.FlowLayout;
import java.awt.GridBagConstraints;
import java.awt.GridBagLayout;
import java.awt.GridLayout;
import java.awt.Insets;
import java.awt.event.MouseWheelEvent;
import java.awt.event.MouseWheelListener;
import java.io.IOException;
import java.io.PrintWriter;
import java.text.DecimalFormat;
import java.text.ParseException;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.Collections;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.TreeMap;
import java.util.concurrent.ExecutionException;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Box;
import javax.swing.BoxLayout;
import javax.swing.JButton;
import javax.swing.JLabel;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTable;
import javax.swing.SwingConstants;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableColumnModel;
import org.apache.commons.lang3.StringUtils;

public class Client extends javax.swing.JFrame {

    public static Map<String, String> accountIdAccessToken = new HashMap<String, String>();
    
    int i = 0;
    int j = 0;
    DecimalFormat df = new DecimalFormat("#.00");
    double allAccountBalance = 0.00;
    
    /**
     * Creates new form Client
     */
    public Client() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        masterTabPane = new javax.swing.JTabbedPane();
        homeTab = new javax.swing.JPanel();
        balanceTile = new javax.swing.JPanel();
        jLabel3 = new javax.swing.JLabel();
        totalBalance = new javax.swing.JLabel();
        debtsTile = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        transactionsScrollPane = new javax.swing.JScrollPane();
        transactionsPanel = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        listedTransactionsPanel = new javax.swing.JPanel();
        transactionDateLabel = new javax.swing.JLabel();
        datedTransactionScrollPanel = new javax.swing.JScrollPane();
        datedTransactionTable = new javax.swing.JTable();
        incomeAndExpenseGraph = new javax.swing.JPanel();
        accountTab = new javax.swing.JPanel();
        linkButton = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        accountScrollPanel = new javax.swing.JScrollPane();
        accountPanel = new javax.swing.JPanel();
        jPanel4 = new javax.swing.JPanel();
        debtsTab = new javax.swing.JPanel();
        jButton3 = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();
        jPanel7 = new javax.swing.JPanel();
        accountPopupTab = new javax.swing.JPanel();
        accountDetailsPopup = new javax.swing.JPanel();
        popupAccountName = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        popupAccountType = new javax.swing.JLabel();
        popupAccountMaskedNumber = new javax.swing.JLabel();
        popupBalance = new javax.swing.JLabel();
        jLabel14 = new javax.swing.JLabel();
        payBillButton = new javax.swing.JButton();
        jLabel19 = new javax.swing.JLabel();
        popupCreditAvailable = new javax.swing.JLabel();
        jPanel8 = new javax.swing.JPanel();
        jLabel17 = new javax.swing.JLabel();
        popupMinPayment = new javax.swing.JLabel();
        jPanel10 = new javax.swing.JPanel();
        jLabel15 = new javax.swing.JLabel();
        popupDueDate = new javax.swing.JLabel();
        transactionsScrollPopup = new javax.swing.JScrollPane();
        transactionsTable = new javax.swing.JTable();
        jLayeredPane1 = new javax.swing.JLayeredPane();
        jLabel1 = new javax.swing.JLabel();
        jLayeredPane2 = new javax.swing.JLayeredPane();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setUndecorated(true);

        masterTabPane.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(75, 75, 75), 3));
        masterTabPane.setTabPlacement(javax.swing.JTabbedPane.LEFT);
        masterTabPane.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        masterTabPane.setMinimumSize(new java.awt.Dimension(529, 60));
        masterTabPane.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                masterTabPaneStateChanged(evt);
            }
        });

        balanceTile.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        balanceTile.setForeground(new java.awt.Color(170, 170, 170));
        balanceTile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                balanceTileMouseClicked(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel3.setText("Balance");

        totalBalance.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        totalBalance.setText("$0.00");

        javax.swing.GroupLayout balanceTileLayout = new javax.swing.GroupLayout(balanceTile);
        balanceTile.setLayout(balanceTileLayout);
        balanceTileLayout.setHorizontalGroup(
            balanceTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, balanceTileLayout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(balanceTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(balanceTileLayout.createSequentialGroup()
                        .addComponent(totalBalance, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        balanceTileLayout.setVerticalGroup(
            balanceTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(balanceTileLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(totalBalance, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        debtsTile.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        debtsTile.setForeground(new java.awt.Color(170, 170, 170));
        debtsTile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                debtsTileMouseClicked(evt);
            }
        });

        jLabel5.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel5.setText("Debts");

        jLabel6.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel6.setText("$(10,000.00)");

        javax.swing.GroupLayout debtsTileLayout = new javax.swing.GroupLayout(debtsTile);
        debtsTile.setLayout(debtsTileLayout);
        debtsTileLayout.setHorizontalGroup(
            debtsTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, debtsTileLayout.createSequentialGroup()
                .addContainerGap(21, Short.MAX_VALUE)
                .addGroup(debtsTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(debtsTileLayout.createSequentialGroup()
                        .addComponent(jLabel6, javax.swing.GroupLayout.DEFAULT_SIZE, 173, Short.MAX_VALUE)
                        .addContainerGap())))
        );
        debtsTileLayout.setVerticalGroup(
            debtsTileLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(debtsTileLayout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel5)
                .addGap(18, 18, 18)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(42, Short.MAX_VALUE))
        );

        transactionsScrollPane.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(75, 75, 75), 2, true));
        transactionsScrollPane.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        transactionsScrollPane.setAutoscrolls(true);

        transactionsPanel.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(75, 75, 75), 2));
        transactionsPanel.setAlignmentX(0.0F);
        transactionsPanel.setAlignmentY(0.0F);
        transactionsPanel.setAutoscrolls(true);

        jButton1.setText("jButton1");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });

        jLabel7.setFont(new java.awt.Font("Segoe UI", 0, 36)); // NOI18N
        jLabel7.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel7.setText("Recent Transactions");
        jLabel7.setVerticalAlignment(javax.swing.SwingConstants.BOTTOM);
        jLabel7.setAlignmentY(0.0F);
        jLabel7.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);

        listedTransactionsPanel.setLayout(new javax.swing.BoxLayout(listedTransactionsPanel, javax.swing.BoxLayout.Y_AXIS));

        transactionDateLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        transactionDateLabel.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        transactionDateLabel.setText("THIS IS A TEST");
        transactionDateLabel.setToolTipText("");
        transactionDateLabel.setAutoscrolls(true);
        transactionDateLabel.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        listedTransactionsPanel.add(transactionDateLabel);

        datedTransactionScrollPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        datedTransactionScrollPanel.setViewportBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(75, 75, 75)));
        datedTransactionScrollPanel.setEnabled(false);

        datedTransactionTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Business", "Category", "Amount"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        datedTransactionTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        datedTransactionTable.setIntercellSpacing(new java.awt.Dimension(5, 5));
        datedTransactionTable.setShowVerticalLines(true);
        datedTransactionTable.getTableHeader().setReorderingAllowed(false);
        datedTransactionScrollPanel.setViewportView(datedTransactionTable);

        listedTransactionsPanel.add(datedTransactionScrollPanel);

        javax.swing.GroupLayout transactionsPanelLayout = new javax.swing.GroupLayout(transactionsPanel);
        transactionsPanel.setLayout(transactionsPanelLayout);
        transactionsPanelLayout.setHorizontalGroup(
            transactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transactionsPanelLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(transactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(listedTransactionsPanel, javax.swing.GroupLayout.PREFERRED_SIZE, 497, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(transactionsPanelLayout.createSequentialGroup()
                        .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 320, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jButton1)))
                .addGap(20, 20, 20))
        );
        transactionsPanelLayout.setVerticalGroup(
            transactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(transactionsPanelLayout.createSequentialGroup()
                .addGroup(transactionsPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(transactionsPanelLayout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addComponent(jLabel7))
                    .addGroup(transactionsPanelLayout.createSequentialGroup()
                        .addGap(36, 36, 36)
                        .addComponent(jButton1)))
                .addGap(18, 18, 18)
                .addComponent(listedTransactionsPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        transactionsScrollPane.setViewportView(transactionsPanel);

        incomeAndExpenseGraph.setBorder(new javax.swing.border.LineBorder(new java.awt.Color(75, 75, 75), 2, true));

        javax.swing.GroupLayout incomeAndExpenseGraphLayout = new javax.swing.GroupLayout(incomeAndExpenseGraph);
        incomeAndExpenseGraph.setLayout(incomeAndExpenseGraphLayout);
        incomeAndExpenseGraphLayout.setHorizontalGroup(
            incomeAndExpenseGraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        incomeAndExpenseGraphLayout.setVerticalGroup(
            incomeAndExpenseGraphLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout homeTabLayout = new javax.swing.GroupLayout(homeTab);
        homeTab.setLayout(homeTabLayout);
        homeTabLayout.setHorizontalGroup(
            homeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeTabLayout.createSequentialGroup()
                .addGap(80, 80, 80)
                .addGroup(homeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(homeTabLayout.createSequentialGroup()
                        .addComponent(balanceTile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(60, 60, 60)
                        .addComponent(debtsTile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(incomeAndExpenseGraph, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(80, 80, 80)
                .addComponent(transactionsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 549, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60))
        );
        homeTabLayout.setVerticalGroup(
            homeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(homeTabLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(homeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(transactionsScrollPane, javax.swing.GroupLayout.PREFERRED_SIZE, 661, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(homeTabLayout.createSequentialGroup()
                        .addGroup(homeTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(debtsTile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(balanceTile, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(80, 80, 80)
                        .addComponent(incomeAndExpenseGraph, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addGap(20, 20, 20))
        );

        transactionsScrollPane.getVerticalScrollBar().setUnitIncrement(16);

        masterTabPane.addTab("Home", homeTab);

        linkButton.setText("Launch link");
        linkButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        linkButton.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                linkButtonMouseClicked(evt);
            }
        });
        linkButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                linkButtonActionPerformed(evt);
            }
        });

        jButton2.setText("jButton2");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        accountScrollPanel.setBorder(null);

        accountPanel.setBorder(javax.swing.BorderFactory.createEmptyBorder(0, 0, 0, 0));
        accountPanel.setLayout(new java.awt.GridBagLayout());
        accountScrollPanel.setViewportView(accountPanel);

        javax.swing.GroupLayout accountTabLayout = new javax.swing.GroupLayout(accountTab);
        accountTab.setLayout(accountTabLayout);
        accountTabLayout.setHorizontalGroup(
            accountTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountTabLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(accountTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(accountScrollPanel)
                    .addGroup(accountTabLayout.createSequentialGroup()
                        .addGap(15, 15, 15)
                        .addComponent(linkButton, javax.swing.GroupLayout.PREFERRED_SIZE, 113, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(180, 180, 180)
                        .addComponent(jButton2)
                        .addGap(0, 816, Short.MAX_VALUE)))
                .addContainerGap())
        );
        accountTabLayout.setVerticalGroup(
            accountTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountTabLayout.createSequentialGroup()
                .addContainerGap()
                .addGroup(accountTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(linkButton)
                    .addComponent(jButton2))
                .addGap(18, 18, 18)
                .addComponent(accountScrollPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE))
        );

        masterTabPane.addTab("Accounts", accountTab);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1241, Short.MAX_VALUE)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 701, Short.MAX_VALUE)
        );

        masterTabPane.addTab("Savings", jPanel4);

        jButton3.setText("jButton3");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout debtsTabLayout = new javax.swing.GroupLayout(debtsTab);
        debtsTab.setLayout(debtsTabLayout);
        debtsTabLayout.setHorizontalGroup(
            debtsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(debtsTabLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 1199, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(debtsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, debtsTabLayout.createSequentialGroup()
                    .addContainerGap(575, Short.MAX_VALUE)
                    .addComponent(jButton3)
                    .addContainerGap(575, Short.MAX_VALUE)))
        );
        debtsTabLayout.setVerticalGroup(
            debtsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, debtsTabLayout.createSequentialGroup()
                .addGap(0, 43, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 655, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(debtsTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(debtsTabLayout.createSequentialGroup()
                    .addContainerGap()
                    .addComponent(jButton3)
                    .addContainerGap(669, Short.MAX_VALUE)))
        );

        masterTabPane.addTab("Debts", debtsTab);

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1241, Short.MAX_VALUE)
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 701, Short.MAX_VALUE)
        );

        masterTabPane.addTab("Investments", jPanel6);

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 1241, Short.MAX_VALUE)
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 701, Short.MAX_VALUE)
        );

        masterTabPane.addTab("Savings", jPanel7);

        accountDetailsPopup.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(75, 75, 75), 2));

        popupAccountName.setFont(new java.awt.Font("Segoe UI", 0, 28)); // NOI18N
        popupAccountName.setText("Bank Account Name");

        jLabel10.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel10.setText("<html>&#8226</html>");

        popupAccountType.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        popupAccountType.setText("Bank Account Type");

        popupAccountMaskedNumber.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        popupAccountMaskedNumber.setText("Account Number - Masked");
        popupAccountMaskedNumber.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);

        popupBalance.setFont(new java.awt.Font("Segoe UI", 0, 28)); // NOI18N
        popupBalance.setText("Account Balance");

        jLabel14.setFont(new java.awt.Font("Segoe UI", 0, 28)); // NOI18N
        jLabel14.setText("Transactions");

        payBillButton.setVisible(false);
        payBillButton.setText("Pay Bill");
        payBillButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                payBillButtonActionPerformed(evt);
            }
        });

        jLabel19.setVisible(false);
        jLabel19.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel19.setText("Available credit");

        popupCreditAvailable.setVisible(false);
        popupCreditAvailable.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        popupCreditAvailable.setText("$99,999.99");

        jPanel8.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(75, 75, 75)));
        jPanel8.setVisible(false);

        jLabel17.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel17.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel17.setText("Min. Payment");

        popupMinPayment.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        popupMinPayment.setText("$999.99");

        javax.swing.GroupLayout jPanel8Layout = new javax.swing.GroupLayout(jPanel8);
        jPanel8.setLayout(jPanel8Layout);
        jPanel8Layout.setHorizontalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel8Layout.createSequentialGroup()
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jLabel17)
                .addContainerGap())
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(popupMinPayment, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel8Layout.setVerticalGroup(
            jPanel8Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel8Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel17)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(popupMinPayment)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel10.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(75, 75, 75)));
        jPanel10.setVisible(false);

        jLabel15.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel15.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel15.setText("Due Date");

        popupDueDate.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        popupDueDate.setText("99/99/9999");

        javax.swing.GroupLayout jPanel10Layout = new javax.swing.GroupLayout(jPanel10);
        jPanel10.setLayout(jPanel10Layout);
        jPanel10Layout.setHorizontalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(popupDueDate, javax.swing.GroupLayout.PREFERRED_SIZE, 70, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );
        jPanel10Layout.setVerticalGroup(
            jPanel10Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel10Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(popupDueDate)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout accountDetailsPopupLayout = new javax.swing.GroupLayout(accountDetailsPopup);
        accountDetailsPopup.setLayout(accountDetailsPopupLayout);
        accountDetailsPopupLayout.setHorizontalGroup(
            accountDetailsPopupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountDetailsPopupLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(accountDetailsPopupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(accountDetailsPopupLayout.createSequentialGroup()
                        .addComponent(popupAccountName)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(popupAccountType)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 298, Short.MAX_VALUE)
                        .addComponent(popupAccountMaskedNumber))
                    .addGroup(accountDetailsPopupLayout.createSequentialGroup()
                        .addGroup(accountDetailsPopupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(popupBalance)
                            .addGroup(accountDetailsPopupLayout.createSequentialGroup()
                                .addComponent(jLabel19)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(popupCreditAvailable))
                            .addComponent(jLabel14))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(accountDetailsPopupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(accountDetailsPopupLayout.createSequentialGroup()
                                .addComponent(jPanel8, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(jPanel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(payBillButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(20, 20, 20))
        );
        accountDetailsPopupLayout.setVerticalGroup(
            accountDetailsPopupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountDetailsPopupLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addGroup(accountDetailsPopupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(popupAccountName)
                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(popupAccountType)
                    .addComponent(popupAccountMaskedNumber))
                .addGap(18, 18, 18)
                .addGroup(accountDetailsPopupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(accountDetailsPopupLayout.createSequentialGroup()
                        .addComponent(popupBalance)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(accountDetailsPopupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel19)
                            .addComponent(popupCreditAvailable, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, accountDetailsPopupLayout.createSequentialGroup()
                        .addGap(0, 22, Short.MAX_VALUE)
                        .addGroup(accountDetailsPopupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel10, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel8, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(accountDetailsPopupLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel14, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(payBillButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );

        transactionsScrollPopup.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(75, 75, 75), 2));
        transactionsScrollPopup.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
        transactionsScrollPopup.setAutoscrolls(true);

        transactionsTable.setAutoCreateRowSorter(true);
        transactionsTable.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        transactionsTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Date", "Merchant", "Category", "Amount"
            }
        ));
        transactionsTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
        transactionsTable.setEnabled(false);
        transactionsTable.setFillsViewportHeight(true);
        transactionsTable.setRowHeight(30);
        transactionsTable.setRowMargin(10);
        transactionsTable.setShowHorizontalLines(true);
        transactionsScrollPopup.setViewportView(transactionsTable);

        javax.swing.GroupLayout accountPopupTabLayout = new javax.swing.GroupLayout(accountPopupTab);
        accountPopupTab.setLayout(accountPopupTabLayout);
        accountPopupTabLayout.setHorizontalGroup(
            accountPopupTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountPopupTabLayout.createSequentialGroup()
                .addGap(60, 60, 60)
                .addGroup(accountPopupTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(accountDetailsPopup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(transactionsScrollPopup))
                .addGap(60, 60, 60))
        );
        accountPopupTabLayout.setVerticalGroup(
            accountPopupTabLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(accountPopupTabLayout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(accountDetailsPopup, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(transactionsScrollPopup)
                .addGap(20, 20, 20))
        );

        masterTabPane.addTab("accountPopup", accountPopupTab);
        masterTabPane.remove(6);

        jLayeredPane1.setMaximumSize(new java.awt.Dimension(50, 50));
        jLayeredPane1.setPreferredSize(new java.awt.Dimension(50, 50));

        jLabel1.setBackground(new java.awt.Color(75, 75, 75));
        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("X");
        jLabel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(187, 187, 187)));
        jLabel1.setOpaque(true);
        jLabel1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jLabel1MouseClicked(evt);
            }
        });

        jLayeredPane1.setLayer(jLabel1, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane1Layout = new javax.swing.GroupLayout(jLayeredPane1);
        jLayeredPane1.setLayout(jLayeredPane1Layout);
        jLayeredPane1Layout.setHorizontalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 38, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 32, Short.MAX_VALUE))
        );
        jLayeredPane1Layout.setVerticalGroup(
            jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
            .addGroup(jLayeredPane1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(jLayeredPane1Layout.createSequentialGroup()
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 44, Short.MAX_VALUE)
                    .addContainerGap()))
        );

        jLabel2.setFont(new java.awt.Font("sansserif", 0, 28)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(75, 75, 75));
        jLabel2.setText("AccountAble");

        jLayeredPane2.setLayer(jLabel2, javax.swing.JLayeredPane.DEFAULT_LAYER);

        javax.swing.GroupLayout jLayeredPane2Layout = new javax.swing.GroupLayout(jLayeredPane2);
        jLayeredPane2.setLayout(jLayeredPane2Layout);
        jLayeredPane2Layout.setHorizontalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jLayeredPane2Layout.createSequentialGroup()
                .addComponent(jLabel2)
                .addGap(0, 1045, Short.MAX_VALUE))
        );
        jLayeredPane2Layout.setVerticalGroup(
            jLayeredPane2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, 50, Short.MAX_VALUE)
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 124, Short.MAX_VALUE)
                .addComponent(jLayeredPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 38, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(masterTabPane, javax.swing.GroupLayout.DEFAULT_SIZE, 1371, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLayeredPane2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLayeredPane1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(0, 698, Short.MAX_VALUE))
            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                    .addGap(0, 44, Short.MAX_VALUE)
                    .addComponent(masterTabPane, javax.swing.GroupLayout.PREFERRED_SIZE, 704, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        setSize(new java.awt.Dimension(1371, 748));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents
    
    private void linkButtonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_linkButtonMouseClicked
        linkButton.setCursor(new java.awt.Cursor(java.awt.Cursor.WAIT_CURSOR));
        try {
            String[] command =
            {
                "cmd",
            };
            Process p = Runtime.getRuntime().exec(command);
            new Thread(new SyncPipe(p.getErrorStream(), System.err)).start();
            new Thread(new SyncPipe(p.getInputStream(), System.out)).start();
            try (PrintWriter stdin = new PrintWriter(p.getOutputStream())) {
                stdin.println("npx kill-port 3000");
                stdin.println("set REACT_APP_USER_ID=" + QuickstartApplication.userID);
                stdin.println("set REACT_APP_USER_ID");
                stdin.println("cd C:\\Users\\cody6\\Documents\\NetBeansProjects\\quickstart\\frontend");
                stdin.println("npm start");
            }
            TimeUnit.SECONDS.sleep(6);  // Gives time for the npm script to run and open the html Link Launch
        } catch (IOException | InterruptedException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }
        linkButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
    }//GEN-LAST:event_linkButtonMouseClicked

    private void jLabel1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jLabel1MouseClicked
        System.exit(0);
    }//GEN-LAST:event_jLabel1MouseClicked

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        try {
            // Pull access tokens from user account in database
            String todaysDate = java.time.LocalDate.now().toString();
            String twoWeeksPreviousDate = java.time.LocalDate.now().minusDays(60).toString();
            List<Transaction> transactions = new ArrayList <>();
            ApiFuture<QuerySnapshot> future = db.collection("users").document(QuickstartApplication.userID).collection("tokens").get();
            List<QueryDocumentSnapshot> tokens = future.get().getDocuments();
            for (QueryDocumentSnapshot  token : tokens) {
                transactions = Transactions.getTransactions(twoWeeksPreviousDate,todaysDate,token.getId());
            }

            // Pull all transactions per access token
            Map<String, List<Transaction>> datedTransactions = new TreeMap<String, List<Transaction>>(Collections.reverseOrder());
             for (Transaction transaction : transactions) {
                List<Transaction> tempList = new ArrayList<>();
                String transactionDate = transaction.getDate().toString();
                if (datedTransactions.containsKey(transactionDate)) {
                    datedTransactions.get(transactionDate).add(transaction);
                } else {
                    tempList.add(transaction);
                    datedTransactions.put(transactionDate, tempList);
                }
             }
             
             ////// can delete once i delete components
             transactionDateLabel.setVisible(false);
             datedTransactionScrollPanel.setVisible(false);
             ////// can delete once i delete components
            
             
            for (String date : datedTransactions.keySet()) {
                // Add and set new date label
                JLabel newLabel = new JLabel(date);
                newLabel.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
                newLabel.setAlignmentX(LEFT_ALIGNMENT);
                listedTransactionsPanel.add(newLabel);
                
                // Add and set new scroll pane container for our table
                JScrollPane newScrollPanel = new JScrollPane();
                newScrollPanel.setHorizontalScrollBarPolicy(javax.swing.ScrollPaneConstants.HORIZONTAL_SCROLLBAR_NEVER);
                newScrollPanel.setWheelScrollingEnabled(false);
                newScrollPanel.addMouseWheelListener(new MouseWheelListener() { // Send scroll events to outer scroll panel for smooth scrolling
                    @Override
                    public void mouseWheelMoved(MouseWheelEvent e) {
                        transactionsScrollPane.dispatchEvent(e);
                    }
                });
                listedTransactionsPanel.add(newScrollPanel);
                
                // Add and set new JTable
                JTable newTable = new JTable();
                newTable.setModel(new javax.swing.table.DefaultTableModel(
                    new Object [][] {
                    },
                    new String [] {
                        "Merchant", "Category", "Amount"
                    }
                ) {
                    Class[] types = new Class [] {
                        java.lang.String.class, java.lang.String.class, java.lang.String.class
                    };
                    boolean[] canEdit = new boolean [] {
                        false, false, false
                    };
                    public Class getColumnClass(int columnIndex) {
                        return types [columnIndex];
                    }
                    public boolean isCellEditable(int rowIndex, int columnIndex) {
                        return canEdit [columnIndex];
                    }
                });         
                newTable.setAutoResizeMode(javax.swing.JTable.AUTO_RESIZE_NEXT_COLUMN);
                newLabel.setAlignmentX(LEFT_ALIGNMENT);
                newTable.setIntercellSpacing(new java.awt.Dimension(5, 5));
                newTable.setShowHorizontalLines(true);
                newTable.getTableHeader().setReorderingAllowed(false);
                newTable.setAutoCreateRowSorter(rootPaneCheckingEnabled);
                newTable.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
                newTable.setRowHeight(30);
                newTable.setRowMargin(10);
                newTable.setEnabled(false);
                DefaultTableModel datedModel = (DefaultTableModel) newTable.getModel();

                int rowCount = 0;
                
                // Populate date for all of Date's transactions and add to a table
                for (Transaction datedTransaction : datedTransactions.get(date)) {
                    rowCount++;
                    // Pull merchant name
                    String merchantName;
                    String nullNameTest = datedTransaction.getMerchantName();
                    if (nullNameTest == null) {
                        merchantName = datedTransaction.getName();
                    } else {
                        merchantName = nullNameTest;
                    }
                    // Pull category
                    String trueCategory;
                    List<String> transactionCategory = datedTransaction.getCategory();
                    if (transactionCategory.get(1) == null) {
                        if (transactionCategory.get(0) == null){
                            trueCategory = "Category unavailable";
                        } else {
                            trueCategory = transactionCategory.get(0);
                        }
                    } else {
                        trueCategory = transactionCategory.get(1);
                    }
                    // Pull transaction amount
                    String transactionAmount = df.format(datedTransaction.getAmount());
                    
                    // add transaction to this date's table
                    Object[] row = { merchantName, trueCategory, transactionAmount };
                    datedModel.addRow(row);
                }
                
                // Adjust tables to only be size of the number of rows
                Dimension size = newTable.getPreferredSize();
                int displayRows = Math.min(newTable.getRowCount(), rowCount);
                size.height = displayRows * newTable.getRowHeight();
                newTable.setPreferredScrollableViewportSize(size);
                // Add table to panel
                newScrollPanel.setViewportView(newTable);
                // Add spacer after Date's entry
                listedTransactionsPanel.add(Box.createRigidArea(new Dimension(0,15)));
            }
        } catch (ParseException | IOException | InterruptedException | ExecutionException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }  
    }//GEN-LAST:event_jButton1MouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked

        try {
            List<AccountBase> accounts = new ArrayList <>();

            ApiFuture<QuerySnapshot> future = db.collection("users").document(QuickstartApplication.userID).collection("tokens").get();
            List<QueryDocumentSnapshot> tokens = future.get().getDocuments();

            for (DocumentSnapshot  token : tokens) {
                accounts.addAll(Accounts.getAccounts(token.getId()));
            }

            for (AccountBase account : accounts) {

                // Getting row informations
                String accountName = account.getName();
                // Account type can be null
                String accountSubType;
                AccountSubtype nullTypeTest = account.getSubtype();
                 if (nullTypeTest == null) {
                    accountSubType = StringUtils.capitalize(account.getType().toString());
                } else {
                    accountSubType = StringUtils.capitalize(nullTypeTest.toString());
                }               
                // Balance can be null
                String accountCurrent;
                Double nullCurrentTest = account.getBalances().getCurrent();  
                Double nullAvailableTest = account.getBalances().getAvailable();
                if (nullCurrentTest == null) {
                    if (nullAvailableTest == null) {
                        accountCurrent = "Balance unavailable";
                    } else {
                        allAccountBalance = allAccountBalance + nullAvailableTest; // add to overall account balance
                        accountCurrent = df.format(nullAvailableTest);
                        //accountCurrent = "current null, available !null";
                    }
                } else {
                    allAccountBalance = allAccountBalance + nullCurrentTest; // add to overall account balance
                    accountCurrent = df.format(nullCurrentTest);
                    //accountCurrent = "current !null";
                }
                
                
                // Account number mask can be null
                String accountMask;
                String nullMaskTest = account.getMask();
                if (nullMaskTest == null) {
                    accountMask = "****";
                } else {
                    accountMask = nullMaskTest;
                }

                JPanel accountTile = new javax.swing.JPanel();
                accountTile.setLayout(new javax.swing.BoxLayout(accountTile, javax.swing.BoxLayout.PAGE_AXIS));
                accountTile.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
                accountTile.setFocusable(true);

                accountTile.add(Box.createRigidArea(new Dimension(15,10)));
                JLabel nameLabel = new JLabel(accountName);
                nameLabel.setFont(new java.awt.Font("Segoe UI", 0, 24));
                accountTile.add(nameLabel);
                JLabel subTypeLabel = new JLabel(accountSubType);
                subTypeLabel.setFont(new java.awt.Font("Segoe UI", 0, 16));
                accountTile.add(subTypeLabel);
                accountTile.add(Box.createRigidArea(new Dimension(15,20)));
                JLabel currentAmountLabel = new JLabel("$" + accountCurrent);
                currentAmountLabel.setFont(new java.awt.Font("Segoe UI", 0, 20));
                accountTile.add(currentAmountLabel);

                accountTile.setPreferredSize(new Dimension(180,145));
                GridBagConstraints c = new GridBagConstraints();
                c.anchor = GridBagConstraints.NORTHWEST;
                c.fill = GridBagConstraints.HORIZONTAL;
                c.insets = new Insets(15, 15, 0, 0);
                c.weightx = 0.001;
                c.weighty = 0.001;                
                c.gridx = i;
                c.gridy = j;
                i++;               
                if (i == 5) {   // move to next row
                    c.insets = new Insets(15, 15, 0, 30);
                    i = 0;
                    j++;
                }
                accountPanel.add(accountTile, c);
                accountPanel.revalidate();
                accountPanel.repaint(); 
                
                ////////////////////// Account Details Popup //////////////////////
                accountTile.addMouseListener(new java.awt.event.MouseAdapter() {
                    @Override
                    public void mousePressed(java.awt.event.MouseEvent evt) {  

                        try {
                            masterTabPane.addTab(accountName, accountPopupTab);
                            
                            ////////////////////// Account Details
                            popupAccountName.setText(accountName);
                            popupAccountType.setText(accountSubType);
                            popupBalance.setText("$" + accountCurrent);
                            popupAccountMaskedNumber.setText("********" + accountMask);
                            // credit card application stuff goes here
                            ////////////////////// Account Details
                            
                            ////////////////////// Transactions
                            String todaysDate = java.time.LocalDate.now().toString();
                            String sixMonthsPreviousDate = java.time.LocalDate.now().minusMonths(6).toString();
                            
                            String tempAccessToken = accountIdAccessToken.get(account.getAccountId());
                            List<Transaction> transactions = new ArrayList <>();
                            
                            transactions = Transactions.getTransactions(sixMonthsPreviousDate,todaysDate,tempAccessToken);
                            
                            DefaultTableModel model = (DefaultTableModel) transactionsTable.getModel();
                            model.setRowCount(0);
                            TableColumnModel colModel = transactionsTable.getColumnModel();
                            
                            for (Transaction transaction : transactions) {
                                if (account.getAccountId().equals(transaction.getAccountId())) {
                                    String transactionDate = transaction.getDate().toString();
                                    String merchantName = transaction.getName();
                                    String transactionAmount = df.format(transaction.getAmount());
                                    String trueCategory = "";
                                    List<String> transactionCategory = transaction.getCategory();
                                    if (transactionCategory.get(1) == null) {
                                        if (transactionCategory.get(0) == null){
                                            trueCategory = "Category can not be found";
                                        } else {
                                            trueCategory = transactionCategory.get(0);
                                        }
                                    } else {
                                        trueCategory = transactionCategory.get(1);
                                    }

                                    Object[] row = { transactionDate, merchantName, trueCategory, "$" + transactionAmount };
                                    model.addRow(row);
                                    
                                }
                                ////////////////////// Transactions 
                            }
                            masterTabPane.setSelectedIndex(6);
                            colModel.getColumn(0).setPreferredWidth(175);
                            colModel.getColumn(1).setPreferredWidth(425);
                            colModel.getColumn(2).setPreferredWidth(325);
                            colModel.getColumn(3).setPreferredWidth(170);
                        } catch (ParseException | IOException ex) {
                            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
                        }  
                    }   
                });
            }
        } catch (InterruptedException | ExecutionException | ParseException | IOException ex) {
            Logger.getLogger(Client.class.getName()).log(Level.SEVERE, null, ex);
        }

        // add empty for at end for formatting
        for (int k = 0; k < 5; k++) {
            JPanel accountTile = new javax.swing.JPanel();
            accountTile.setPreferredSize(new Dimension(180,145));
            accountTile.setBorder(null);
            GridBagConstraints c = new GridBagConstraints();
            c.anchor = GridBagConstraints.NORTHWEST;
            c.fill = GridBagConstraints.HORIZONTAL;
            c.insets = new Insets(15, 15, 0, 0);
            if (k == 4) {
                c.insets = new Insets(15, 15, 0, 30);
            }
            c.weightx = 0.001;
            c.weighty = 0.001;                
            c.gridx = k;
            c.gridy = j + 1;
            accountPanel.add(accountTile, c);
            accountPanel.revalidate();
            accountPanel.repaint();
        }
        totalBalance.setText("$" + df.format(allAccountBalance));
        balanceTile.revalidate();
        balanceTile.repaint();
    }//GEN-LAST:event_jButton2MouseClicked

    private void payBillButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_payBillButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_payBillButtonActionPerformed

    private void masterTabPaneStateChanged(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_masterTabPaneStateChanged
        // clicking out of account details popup closes the tab
        if (masterTabPane.getTabCount() == 7 && masterTabPane.getSelectedIndex() != 6) {
            masterTabPane.remove(6);
        }
    }//GEN-LAST:event_masterTabPaneStateChanged

    private void linkButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_linkButtonActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_linkButtonActionPerformed

    private void balanceTileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_balanceTileMouseClicked
        masterTabPane.setSelectedIndex(1);
    }//GEN-LAST:event_balanceTileMouseClicked

    private void debtsTileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_debtsTileMouseClicked
        masterTabPane.setSelectedIndex(3);
    }//GEN-LAST:event_debtsTileMouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
 
    }//GEN-LAST:event_jButton3MouseClicked

    
    /**
     * @param args the command line arguments
     */
    public static void main() {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel accountDetailsPopup;
    private javax.swing.JPanel accountPanel;
    private javax.swing.JPanel accountPopupTab;
    private javax.swing.JScrollPane accountScrollPanel;
    private javax.swing.JPanel accountTab;
    private javax.swing.JPanel balanceTile;
    private javax.swing.JScrollPane datedTransactionScrollPanel;
    private javax.swing.JTable datedTransactionTable;
    private javax.swing.JPanel debtsTab;
    private javax.swing.JPanel debtsTile;
    private javax.swing.JPanel homeTab;
    private javax.swing.JPanel incomeAndExpenseGraph;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLayeredPane jLayeredPane1;
    private javax.swing.JLayeredPane jLayeredPane2;
    private javax.swing.JPanel jPanel10;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JPanel jPanel8;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton linkButton;
    private javax.swing.JPanel listedTransactionsPanel;
    private static javax.swing.JTabbedPane masterTabPane;
    private javax.swing.JButton payBillButton;
    private javax.swing.JLabel popupAccountMaskedNumber;
    private javax.swing.JLabel popupAccountName;
    private javax.swing.JLabel popupAccountType;
    private javax.swing.JLabel popupBalance;
    private javax.swing.JLabel popupCreditAvailable;
    private javax.swing.JLabel popupDueDate;
    private javax.swing.JLabel popupMinPayment;
    private javax.swing.JLabel totalBalance;
    private javax.swing.JLabel transactionDateLabel;
    private javax.swing.JPanel transactionsPanel;
    private javax.swing.JScrollPane transactionsScrollPane;
    private javax.swing.JScrollPane transactionsScrollPopup;
    private javax.swing.JTable transactionsTable;
    // End of variables declaration//GEN-END:variables
}
